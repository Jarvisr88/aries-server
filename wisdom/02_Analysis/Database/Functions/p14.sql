CREATE DEFINER=`root`@`localhost` PROCEDURE `process_reoccuring_order`(P_OrderID INT, P_BilledWhen VARCHAR(50), P_BillItemOn VARCHAR(50))
BEGIN
  -- reoccuring sales support
  -- tbl_orderdetails.ReoccuringID - source line item
  DECLARE V_DetailsCount INT; --
  DECLARE V_NewOrderID INT; --
  DECLARE V_NewOrderDate DATETIME; --

  SELECT
     Count(*) as `Count`
    ,MAX(IF(details.BillingMonth <= 1, GetNextDosFrom(details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosFrom)) as NewOrderDate
  INTO
     V_DetailsCount
    ,V_NewOrderDate
  FROM view_orderdetails AS details
       INNER JOIN tbl_order ON details.CustomerID = tbl_order.CustomerID
                           AND details.OrderID    = tbl_order.ID
  WHERE (details.OrderID = P_OrderID)
    AND (details.BilledWhen = P_BilledWhen)
    AND (details.BilledWhen != 'One Time')
    AND (details.ActualBillItemOn = P_BillItemOn)
    AND (details.SaleRentType = 'Re-occurring Sale'); --

  IF 0 < V_DetailsCount THEN
    -- create order
    INSERT INTO tbl_order
    (CustomerID
    ,Approved
    ,OrderDate
    ,DeliveryDate
    ,BillDate
    ,EndDate
    ,TakenBy
    ,ShippingMethodID
    ,SpecialInstructions
    ,CustomerInsurance1_ID
    ,CustomerInsurance2_ID
    ,CustomerInsurance3_ID
    ,CustomerInsurance4_ID
    ,ICD9_1
    ,ICD9_2
    ,ICD9_3
    ,ICD9_4
    ,ICD10_01
    ,ICD10_02
    ,ICD10_03
    ,ICD10_04
    ,ICD10_05
    ,ICD10_06
    ,ICD10_07
    ,ICD10_08
    ,ICD10_09
    ,ICD10_10
    ,ICD10_11
    ,ICD10_12
    ,DoctorID
    ,POSTypeID
    ,FacilityID
    ,ReferralID
    ,SalesrepID
    ,LocationID
    ,ClaimNote
    ,UserField1
    ,UserField2
    ,LastUpdateUserID)
    SELECT
     CustomerID
    ,0 as Approved
    ,V_NewOrderDate
    ,null as DeliveryDate
    ,null as BillDate
    ,null as EndDate
    ,'AutoGenerated' as TakenBy
    ,ShippingMethodID
    ,SpecialInstructions
    ,CustomerInsurance1_ID
    ,CustomerInsurance2_ID
    ,CustomerInsurance3_ID
    ,CustomerInsurance4_ID
    ,ICD9_1
    ,ICD9_2
    ,ICD9_3
    ,ICD9_4
    ,ICD10_01
    ,ICD10_02
    ,ICD10_03
    ,ICD10_04
    ,ICD10_05
    ,ICD10_06
    ,ICD10_07
    ,ICD10_08
    ,ICD10_09
    ,ICD10_10
    ,ICD10_11
    ,ICD10_12
    ,DoctorID
    ,POSTypeID
    ,FacilityID
    ,ReferralID
    ,SalesrepID
    ,LocationID
    ,ClaimNote
    ,UserField1
    ,UserField2
    ,1 as LastUpdateUserID
    FROM tbl_order
    WHERE (ID = P_OrderID); --

    SELECT LAST_INSERT_ID() INTO V_NewOrderID; --

    -- add line items to order
    INSERT INTO tbl_orderdetails
    (CustomerID
    ,OrderID
    ,InventoryItemID
    ,PriceCodeID
    ,SaleRentType
    ,BillablePrice
    ,AllowablePrice
    ,Taxable
    ,FlatRate
    ,DOSFrom
    ,DOSTo
    ,SerialNumber
    ,PickupDate
    ,ShowSpanDates
    -- ordered
    ,OrderedQuantity
    ,OrderedUnits
    ,OrderedWhen
    ,OrderedConverter
    -- billed
    ,BilledQuantity
    ,BilledUnits
    ,BilledWhen
    ,BilledConverter
    -- delivery
    ,DeliveryQuantity
    ,DeliveryUnits
    ,DeliveryConverter
    -- other
    ,BillingMonth
    ,BillingCode
    ,Modifier1
    ,Modifier2
    ,Modifier3
    ,Modifier4
    ,DXPointer
    ,DXPointer10
    ,DrugNoteField
    ,DrugControlNumber
    ,BillItemOn
    ,AuthorizationNumber
    ,AuthorizationTypeID
    ,AuthorizationExpirationDate
    ,ReasonForPickup
    ,SendCMN_RX_w_invoice
    ,MedicallyUnnecessary
    ,SpecialCode
    ,ReviewCode
    ,ReoccuringID
    ,HaoDescription
    ,CMNFormID
    ,WarehouseID
    ,BillIns1
    ,BillIns2
    ,BillIns3
    ,BillIns4
    ,NopayIns1
    ,AcceptAssignment
    ,UserField1
    ,UserField2)
    SELECT
     CustomerID
    ,OrderID
    ,InventoryItemID
    ,PriceCodeID
    ,SaleRentType
    ,BillablePrice
    ,AllowablePrice
    ,Taxable
    ,FlatRate
    ,DOSFrom
    ,DOSTo
    ,SerialNumber
    ,PickupDate
    ,ShowSpanDates
    -- ordered
    ,OrderedQuantity
    ,OrderedUnits
    ,OrderedWhen
    ,OrderedConverter
    -- billed
    ,BilledQuantity
    ,BilledUnits
    ,BilledWhen
    ,BilledConverter
    -- delivery
    ,DeliveryQuantity
    ,DeliveryUnits
    ,DeliveryConverter
    -- other
    ,BillingMonth
    ,BillingCode
    ,Modifier1
    ,Modifier2
    ,Modifier3
    ,Modifier4
    ,DXPointer
    ,DXPointer10
    ,DrugNoteField
    ,DrugControlNumber
    ,BillItemOn
    ,AuthorizationNumber
    ,AuthorizationTypeID
    ,AuthorizationExpirationDate
    ,ReasonForPickup
    ,SendCMN_RX_w_invoice
    ,MedicallyUnnecessary
    ,SpecialCode
    ,ReviewCode
    ,ReoccuringID
    ,HaoDescription
    ,CMNFormID
    ,WarehouseID
    ,BillIns1
    ,BillIns2
    ,BillIns3
    ,BillIns4
    ,NopayIns1
    ,AcceptAssignment
    ,UserField1
    ,UserField2
    FROM (
        SELECT
         details.CustomerID
        ,V_NewOrderID as OrderID
        ,details.InventoryItemID
        ,details.PriceCodeID
        ,'Re-occurring Sale' as SaleRentType
        ,details.BillablePrice
        ,details.AllowablePrice
        ,details.Taxable
        ,details.FlatRate
        ,IF(details.BillingMonth <= 1, GetNextDosFrom(details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosFrom) as DOSFrom
        ,IF(details.BillingMonth <= 1, GetNextDosTo  (details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosTo  ) as DOSTo
        ,null as SerialNumber
        ,null as PickupDate
        ,details.ShowSpanDates
        -- ordered
        ,details.OrderedQuantity
        ,details.OrderedUnits
        ,details.OrderedWhen
        ,details.OrderedConverter
        -- billed
        -- ,details.BilledQuantity
        ,OrderedQty2BilledQty(
            IF(details.BillingMonth <= 1, GetNextDosFrom(details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosFrom),
            IF(details.BillingMonth <= 1, GetNextDosTo  (details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosTo  ),
            details.OrderedQuantity, details.OrderedWhen, details.BilledWhen,
            details.OrderedConverter, details.DeliveryConverter, details.BilledConverter) as BilledQuantity
        ,details.BilledUnits
        ,details.BilledWhen
        ,details.BilledConverter
        -- delivery
        -- ,details.DeliveryQuantity
        ,OrderedQty2DeliveryQty(
            IF(details.BillingMonth <= 1, GetNextDosFrom(details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosFrom),
            IF(details.BillingMonth <= 1, GetNextDosTo  (details.DosFrom, details.DosTo, details.ActualBilledWhen), details.DosTo  ),
            details.OrderedQuantity, details.OrderedWhen, details.BilledWhen,
            details.OrderedConverter, details.DeliveryConverter, details.BilledConverter) as DeliveryQuantity
        ,details.DeliveryUnits
        ,details.DeliveryConverter
        -- other
        ,1 as BillingMonth
        ,details.BillingCode
        ,details.Modifier1
        ,details.Modifier2
        ,details.Modifier3
        ,details.Modifier4
        ,details.DXPointer
        ,details.DXPointer10
        ,details.DrugNoteField
        ,details.DrugControlNumber
        ,details.BillItemOn
        ,details.AuthorizationNumber
        ,details.AuthorizationTypeID
        ,details.AuthorizationExpirationDate
        ,null as ReasonForPickup
        ,details.SendCMN_RX_w_invoice
        ,details.MedicallyUnnecessary
        ,details.SpecialCode
        ,details.ReviewCode
        ,details.ID as ReoccuringID
        ,details.HaoDescription
        ,details.CMNFormID
        ,details.WarehouseID
        ,details.BillIns1
        ,details.BillIns2
        ,details.BillIns3
        ,details.BillIns4
        ,details.NopayIns1
        ,details.AcceptAssignment
        ,details.UserField1
        ,details.UserField2
        FROM view_orderdetails as details
             INNER JOIN tbl_order ON details.CustomerID = tbl_order.CustomerID
                                 AND details.OrderID    = tbl_order.ID
        WHERE (details.OrderID = P_OrderID)
          AND (details.BilledWhen = P_BilledWhen)
          AND (details.BilledWhen != 'One Time')
          AND (details.ActualBillItemOn = P_BillItemOn)
          AND (details.SaleRentType = 'Re-occurring Sale')
    ) as `tmp`; --
  END IF; --

  -- update source line items -- mark them as one time sales
  UPDATE view_orderdetails as details
         INNER JOIN tbl_order ON details.CustomerID = tbl_order.CustomerID
                             AND details.OrderID    = tbl_order.ID
  SET details.SaleRentType = 'One Time Sale'
  WHERE (details.OrderID = P_OrderID)
    AND (details.BilledWhen = P_BilledWhen)
    AND (details.ActualBillItemOn = P_BillItemOn)
    AND (details.SaleRentType = 'Re-occurring Sale'); --
END