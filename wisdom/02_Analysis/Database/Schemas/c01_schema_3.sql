-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.alembic_version
(
    version_num character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num)
);

CREATE TABLE IF NOT EXISTS public.audit_logs
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    action character varying(50) COLLATE pg_catalog."default" NOT NULL,
    resource character varying(50) COLLATE pg_catalog."default" NOT NULL,
    resource_id integer,
    details character varying(1000) COLLATE pg_catalog."default",
    ip_address character varying(50) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT audit_logs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.authorization_types
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    requires_number boolean,
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT authorization_types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.billing_codes
(
    id serial NOT NULL,
    code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    code_type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    effective_date date NOT NULL,
    end_date date,
    default_price numeric(10, 2),
    unit_type character varying(20) COLLATE pg_catalog."default",
    is_active boolean,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT billing_codes_pkey PRIMARY KEY (id),
    CONSTRAINT billing_codes_code_key UNIQUE (code)
);

CREATE TABLE IF NOT EXISTS public.claim_line_items
(
    id serial NOT NULL,
    claim_id integer NOT NULL,
    order_detail_id integer NOT NULL,
    sequence_number integer NOT NULL,
    service_date date NOT NULL,
    hcpcs_code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    modifier1 character varying(2) COLLATE pg_catalog."default",
    modifier2 character varying(2) COLLATE pg_catalog."default",
    modifier3 character varying(2) COLLATE pg_catalog."default",
    modifier4 character varying(2) COLLATE pg_catalog."default",
    units integer NOT NULL,
    billed_amount numeric(10, 2) NOT NULL,
    allowed_amount numeric(10, 2),
    paid_amount numeric(10, 2),
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT claim_line_items_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.claim_status_history
(
    id serial NOT NULL,
    claim_id integer NOT NULL,
    status claimstatus NOT NULL,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT claim_status_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.claims
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    insurance_id integer NOT NULL,
    claim_number character varying(50) COLLATE pg_catalog."default",
    status claimstatus NOT NULL,
    filing_date date,
    service_from_date date NOT NULL,
    service_to_date date,
    billed_amount numeric(10, 2) NOT NULL,
    allowed_amount numeric(10, 2),
    paid_amount numeric(10, 2),
    patient_responsibility numeric(10, 2),
    diagnosis_codes character varying(500) COLLATE pg_catalog."default",
    authorization_number character varying(50) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT claims_pkey PRIMARY KEY (id),
    CONSTRAINT claims_claim_number_key UNIQUE (claim_number)
);

CREATE TABLE IF NOT EXISTS public.companies
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    odbc_dsn character varying(50) COLLATE pg_catalog."default",
    server character varying(50) COLLATE pg_catalog."default",
    port integer,
    database character varying(50) COLLATE pg_catalog."default",
    active boolean NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT companies_pkey PRIMARY KEY (id),
    CONSTRAINT companies_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.customer_addresses
(
    id serial NOT NULL,
    customer_id integer NOT NULL,
    address_type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    address1 character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address2 character varying(100) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    state character varying(2) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    is_primary boolean,
    is_billing boolean,
    is_shipping boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT customer_addresses_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.customer_doctors
(
    customer_id integer NOT NULL,
    doctor_id integer NOT NULL,
    CONSTRAINT customer_doctors_pkey PRIMARY KEY (customer_id, doctor_id)
);

CREATE TABLE IF NOT EXISTS public.customer_facilities
(
    customer_id integer NOT NULL,
    facility_id integer NOT NULL,
    CONSTRAINT customer_facilities_pkey PRIMARY KEY (customer_id, facility_id)
);

CREATE TABLE IF NOT EXISTS public.customer_insurances
(
    id serial NOT NULL,
    customer_id integer NOT NULL,
    insurance_company_id integer NOT NULL,
    policy_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    group_number character varying(50) COLLATE pg_catalog."default",
    effective_date date,
    termination_date date,
    is_primary boolean,
    is_active boolean,
    verification_date timestamp without time zone,
    verification_method character varying(50) COLLATE pg_catalog."default",
    verification_reference character varying(50) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT customer_insurances_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    id serial NOT NULL,
    company_id integer NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    middle_name character varying(50) COLLATE pg_catalog."default",
    date_of_birth date NOT NULL,
    ssn character varying(11) COLLATE pg_catalog."default",
    gender gender NOT NULL,
    marital_status maritalstatus,
    email character varying(100) COLLATE pg_catalog."default",
    phone_home character varying(20) COLLATE pg_catalog."default",
    phone_work character varying(20) COLLATE pg_catalog."default",
    phone_mobile character varying(20) COLLATE pg_catalog."default",
    is_active boolean NOT NULL,
    status_date timestamp without time zone,
    height integer,
    weight integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT customers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.delivery_schedules
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    scheduled_date timestamp without time zone NOT NULL,
    delivery_window_start timestamp without time zone NOT NULL,
    delivery_window_end timestamp without time zone NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    driver_notes text COLLATE pg_catalog."default",
    customer_notes text COLLATE pg_catalog."default",
    actual_delivery_date timestamp without time zone,
    signature_required boolean,
    signature_obtained boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT delivery_schedules_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.doctors
(
    id serial NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    middle_name character varying(1) COLLATE pg_catalog."default",
    suffix character varying(10) COLLATE pg_catalog."default",
    npi character varying(10) COLLATE pg_catalog."default" NOT NULL,
    license_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    license_expiry date,
    upin_number character varying(20) COLLATE pg_catalog."default",
    medicaid_number character varying(20) COLLATE pg_catalog."default",
    address1 character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address2 character varying(100) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    state character varying(2) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    fax character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT doctors_pkey PRIMARY KEY (id),
    CONSTRAINT doctors_npi_key UNIQUE (npi)
);

CREATE TABLE IF NOT EXISTS public.facilities
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    facility_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address1 character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address2 character varying(100) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    state character varying(2) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    fax character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    npi character varying(10) COLLATE pg_catalog."default",
    tax_id character varying(20) COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT facilities_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.insurance_companies
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    payer_id character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address1 character varying(100) COLLATE pg_catalog."default",
    address2 character varying(100) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default",
    state character varying(2) COLLATE pg_catalog."default",
    zip_code character varying(10) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    fax character varying(20) COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT insurance_companies_pkey PRIMARY KEY (id),
    CONSTRAINT insurance_companies_payer_id_key UNIQUE (payer_id)
);

CREATE TABLE IF NOT EXISTS public.insurance_fee_schedules
(
    id serial NOT NULL,
    insurance_plan_id integer NOT NULL,
    billing_code_id integer NOT NULL,
    allowed_amount numeric(10, 2) NOT NULL,
    effective_date date NOT NULL,
    end_date date,
    notes text COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT insurance_fee_schedules_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.insurance_plans
(
    id serial NOT NULL,
    insurance_company_id integer NOT NULL,
    plan_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    plan_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    plan_number character varying(50) COLLATE pg_catalog."default",
    claims_address character varying(255) COLLATE pg_catalog."default",
    claims_phone character varying(20) COLLATE pg_catalog."default",
    claims_email character varying(255) COLLATE pg_catalog."default",
    payer_id character varying(50) COLLATE pg_catalog."default",
    supports_electronic_filing boolean,
    notes text COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT insurance_plans_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inventory_categories
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    parent_id integer,
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT inventory_categories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inventory_items
(
    id serial NOT NULL,
    category_id integer NOT NULL,
    manufacturer_id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    model_number character varying(100) COLLATE pg_catalog."default" NOT NULL,
    item_type itemtype NOT NULL,
    purchase_price numeric(10, 2),
    rental_price numeric(10, 2),
    msrp numeric(10, 2),
    reorder_point integer,
    reorder_quantity integer,
    minimum_stock integer,
    hcpcs_code character varying(20) COLLATE pg_catalog."default",
    billing_description character varying(255) COLLATE pg_catalog."default",
    is_active boolean,
    is_serialized boolean,
    is_rentable boolean,
    requires_maintenance boolean,
    maintenance_interval_days integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT inventory_items_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.maintenance_logs
(
    id serial NOT NULL,
    stock_item_id integer NOT NULL,
    maintenance_schedule_id integer,
    maintenance_date timestamp without time zone NOT NULL,
    completed_by character varying(100) COLLATE pg_catalog."default" NOT NULL,
    duration_minutes integer,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    notes text COLLATE pg_catalog."default",
    checklist_results text COLLATE pg_catalog."default",
    parts_replaced text COLLATE pg_catalog."default",
    labor_cost numeric(10, 2),
    parts_cost numeric(10, 2),
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT maintenance_logs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.maintenance_schedules
(
    id serial NOT NULL,
    inventory_item_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    interval_days integer NOT NULL,
    checklist text COLLATE pg_catalog."default",
    estimated_duration_minutes integer,
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT maintenance_schedules_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.manufacturers
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(100) COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    website character varying(255) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT manufacturers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    inventory_item_id integer NOT NULL,
    sale_rent_type salerenttype NOT NULL,
    serial_number character varying(50) COLLATE pg_catalog."default",
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    billable_price numeric(10, 2) NOT NULL,
    allowable_price numeric(10, 2),
    billing_code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    modifier1 character varying(2) COLLATE pg_catalog."default",
    modifier2 character varying(2) COLLATE pg_catalog."default",
    modifier3 character varying(2) COLLATE pg_catalog."default",
    modifier4 character varying(2) COLLATE pg_catalog."default",
    dos_from date NOT NULL,
    dos_to date,
    pickup_date date,
    authorization_number character varying(50) COLLATE pg_catalog."default",
    authorization_type_id integer,
    is_completed boolean,
    is_cancelled boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT order_details_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_status_history
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    status orderstatus NOT NULL,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT order_status_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id serial NOT NULL,
    customer_id integer NOT NULL,
    order_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    order_date timestamp without time zone NOT NULL,
    status orderstatus NOT NULL,
    delivery_date timestamp without time zone,
    shipping_method_id integer,
    tracking_number character varying(100) COLLATE pg_catalog."default",
    bill_date timestamp without time zone,
    total_amount numeric(10, 2) NOT NULL,
    insurance1_id integer,
    insurance2_id integer,
    icd10_codes character varying(500) COLLATE pg_catalog."default",
    prescribing_doctor_id integer,
    special_instructions text COLLATE pg_catalog."default",
    internal_notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (id),
    CONSTRAINT orders_order_number_key UNIQUE (order_number)
);

CREATE TABLE IF NOT EXISTS public.payment_adjustments
(
    id serial NOT NULL,
    payment_id integer NOT NULL,
    adjustment_type adjustmenttype NOT NULL,
    amount numeric(10, 2) NOT NULL,
    reason_code character varying(20) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT payment_adjustments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id serial NOT NULL,
    claim_id integer,
    order_id integer NOT NULL,
    payment_number character varying(50) COLLATE pg_catalog."default",
    payment_date timestamp without time zone NOT NULL,
    payment_type paymenttype NOT NULL,
    status paymentstatus NOT NULL,
    amount numeric(10, 2) NOT NULL,
    reference_number character varying(50) COLLATE pg_catalog."default",
    payment_method character varying(50) COLLATE pg_catalog."default",
    payment_source character varying(100) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT payments_pkey PRIMARY KEY (id),
    CONSTRAINT payments_payment_number_key UNIQUE (payment_number)
);

CREATE TABLE IF NOT EXISTS public.permissions
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    resource character varying(50) COLLATE pg_catalog."default" NOT NULL,
    action character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT permissions_pkey PRIMARY KEY (id),
    CONSTRAINT permissions_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.role_permissions
(
    role_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT role_permissions_pkey PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.shipping_methods
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    carrier character varying(50) COLLATE pg_catalog."default" NOT NULL,
    is_active boolean,
    tracking_url_template character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT shipping_methods_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.stock_items
(
    id serial NOT NULL,
    inventory_item_id integer NOT NULL,
    serial_number character varying(100) COLLATE pg_catalog."default",
    lot_number character varying(100) COLLATE pg_catalog."default",
    status itemstatus NOT NULL,
    warehouse_id integer NOT NULL,
    location_code character varying(50) COLLATE pg_catalog."default",
    purchase_date timestamp without time zone,
    purchase_order_number character varying(50) COLLATE pg_catalog."default",
    purchase_cost numeric(10, 2),
    notes text COLLATE pg_catalog."default",
    last_maintenance_date timestamp without time zone,
    next_maintenance_date timestamp without time zone,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT stock_items_pkey PRIMARY KEY (id),
    CONSTRAINT stock_items_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.system_configs
(
    id serial NOT NULL,
    company_id integer NOT NULL,
    key character varying(100) COLLATE pg_catalog."default" NOT NULL,
    value character varying(500) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    is_encrypted boolean NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT system_configs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_roles
(
    user_id integer NOT NULL,
    role_id integer NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    hashed_password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    full_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL,
    company_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.warehouses
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    address_line1 character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    state character varying(2) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    manager_name character varying(100) COLLATE pg_catalog."default",
    is_active boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    created_by character varying(50) COLLATE pg_catalog."default",
    updated_by character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT warehouses_pkey PRIMARY KEY (id),
    CONSTRAINT warehouses_code_key UNIQUE (code)
);

ALTER TABLE IF EXISTS public.audit_logs
    ADD CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.claim_line_items
    ADD CONSTRAINT claim_line_items_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES public.claims (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.claim_line_items
    ADD CONSTRAINT claim_line_items_order_detail_id_fkey FOREIGN KEY (order_detail_id)
    REFERENCES public.order_details (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.claim_status_history
    ADD CONSTRAINT claim_status_history_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES public.claims (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.claims
    ADD CONSTRAINT claims_insurance_id_fkey FOREIGN KEY (insurance_id)
    REFERENCES public.customer_insurances (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.claims
    ADD CONSTRAINT claims_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_addresses
    ADD CONSTRAINT customer_addresses_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_doctors
    ADD CONSTRAINT customer_doctors_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_doctors
    ADD CONSTRAINT customer_doctors_doctor_id_fkey FOREIGN KEY (doctor_id)
    REFERENCES public.doctors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_facilities
    ADD CONSTRAINT customer_facilities_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_facilities
    ADD CONSTRAINT customer_facilities_facility_id_fkey FOREIGN KEY (facility_id)
    REFERENCES public.facilities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_insurances
    ADD CONSTRAINT customer_insurances_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_insurances
    ADD CONSTRAINT customer_insurances_insurance_company_id_fkey FOREIGN KEY (insurance_company_id)
    REFERENCES public.insurance_companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customers
    ADD CONSTRAINT customers_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.delivery_schedules
    ADD CONSTRAINT delivery_schedules_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.insurance_fee_schedules
    ADD CONSTRAINT insurance_fee_schedules_billing_code_id_fkey FOREIGN KEY (billing_code_id)
    REFERENCES public.billing_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.insurance_fee_schedules
    ADD CONSTRAINT insurance_fee_schedules_insurance_plan_id_fkey FOREIGN KEY (insurance_plan_id)
    REFERENCES public.insurance_plans (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.insurance_plans
    ADD CONSTRAINT insurance_plans_insurance_company_id_fkey FOREIGN KEY (insurance_company_id)
    REFERENCES public.insurance_companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventory_categories
    ADD CONSTRAINT inventory_categories_parent_id_fkey FOREIGN KEY (parent_id)
    REFERENCES public.inventory_categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventory_items
    ADD CONSTRAINT inventory_items_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.inventory_categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventory_items
    ADD CONSTRAINT inventory_items_manufacturer_id_fkey FOREIGN KEY (manufacturer_id)
    REFERENCES public.manufacturers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.maintenance_logs
    ADD CONSTRAINT maintenance_logs_maintenance_schedule_id_fkey FOREIGN KEY (maintenance_schedule_id)
    REFERENCES public.maintenance_schedules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.maintenance_logs
    ADD CONSTRAINT maintenance_logs_stock_item_id_fkey FOREIGN KEY (stock_item_id)
    REFERENCES public.stock_items (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.maintenance_schedules
    ADD CONSTRAINT maintenance_schedules_inventory_item_id_fkey FOREIGN KEY (inventory_item_id)
    REFERENCES public.inventory_items (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_details_authorization_type_id_fkey FOREIGN KEY (authorization_type_id)
    REFERENCES public.authorization_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_details_inventory_item_id_fkey FOREIGN KEY (inventory_item_id)
    REFERENCES public.inventory_items (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_status_history
    ADD CONSTRAINT order_status_history_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_insurance1_id_fkey FOREIGN KEY (insurance1_id)
    REFERENCES public.customer_insurances (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_insurance2_id_fkey FOREIGN KEY (insurance2_id)
    REFERENCES public.customer_insurances (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_prescribing_doctor_id_fkey FOREIGN KEY (prescribing_doctor_id)
    REFERENCES public.doctors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_shipping_method_id_fkey FOREIGN KEY (shipping_method_id)
    REFERENCES public.shipping_methods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payment_adjustments
    ADD CONSTRAINT payment_adjustments_payment_id_fkey FOREIGN KEY (payment_id)
    REFERENCES public.payments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES public.claims (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT role_permissions_permission_id_fkey FOREIGN KEY (permission_id)
    REFERENCES public.permissions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT role_permissions_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stock_items
    ADD CONSTRAINT stock_items_inventory_item_id_fkey FOREIGN KEY (inventory_item_id)
    REFERENCES public.inventory_items (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stock_items
    ADD CONSTRAINT stock_items_warehouse_id_fkey FOREIGN KEY (warehouse_id)
    REFERENCES public.warehouses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.system_configs
    ADD CONSTRAINT system_configs_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;